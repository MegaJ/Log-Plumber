* {
    box-sizing: border-box;
}

h1,h2,h3{line-height:1.2}

html {
    height: 100%;
    min-height: 100%;
    overflow: hidden;
    -webkit-user-select: none;
    cursor: default;
}

/* From fonts.google.com under
Apache License, Version 2.0  */
/* latin */
@font-face {
  font-family: 'Open Sans Condensed';
  font-style: normal;           /*light*/
  font-weight: 300;
  src: url('./fonts/OpenSansCondensedLight.woff2') format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
}

.slant {
    font-style: italic;
}

.titular {
    font-size: 64px;
}

textArea {
    color: white;
    /* SkyBlue4 */
    background-color: #000;
}

textArea::selection {
  background: #ffb7b7;
}

textArea::scrollbar {
    background-color: black;
}

button {
    /* dark orange */
    color: #be5e00;
    background-color: navy;
}

/* screen shake idea, but I'm unsure about the performance */
/* from https://css-tricks.com/snippets/css/shake-css-keyframe-animation/ */
/* html:hover { */
/*   animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both; */
/*   transform: translate3d(0, 0, 0); */
/*   backface-visibility: hidden; */
/*   perspective: 1000px; */
/* } */

/* @keyframes shake { */
/*   10%, 90% { */
/*     transform: translate3d(-1px, 0, 0); */
/*   } */
  
/*   20%, 80% { */
/*     transform: translate3d(2px, 0, 0); */
/*   } */

/*   30%, 50%, 70% { */
/*     transform: translate3d(-4px, 0, 0); */
/*   } */

/*   40%, 60% { */
/*     transform: translate3d(4px, 0, 0); */
/*   } */
/* } */

body {
    line-height:1.6;
    font-size: 18px;
    color: #e6ffff;
    background-color: #000d33;
    margin: 0;
    height: 100%;
    min-height: 100%;
    display: flex;
    margin-left: 40px;
    margin-bottom: 20px;

    font-family: 'Open Sans Condensed', sans-serif;
    
    text-rendering: optimizeSpeed;
}

/* body div { */
/*     margin: auto; */
/* } */


.nav {
    width: 340px;
    overflow-x: hidden;
    overflow-y: auto;
    color: var(--color-subtle);
    border-right: 1px solid var(--color-border);
    background-color: var(--color-bg);
    visibility: hidden;
    opacity: 0;
}

.content {
    margin-left: 40px;
    margin-bottom: 20px;
    padding: 0;
    flex: 1;
    position: relative;
    font-size:18px;
    color: #e6ffff;
    padding:0;
    overflow: scroll;
    transform: translate3d(0,0,0); /*for gpu compositing?*/
}

.section.is-shown {
    visibility: visible;
    opacity: 1;
    pointer-events: auto;
}

.section {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    visibility:hidden;
    overflow-x: auto;
    overflow-y: auto;
    transform: translate3d(0,0,0); /*for gpu compositing?*/
    pointer-events: none;
}

textarea {
    width: 90%;
    display: block;
    min-height: 100px;
    margin-left: auto;
    margin-right: auto;
    white-space:pre;
    overflow: scroll;
}

.regexOption {
    display: none;
}

.linker {
    -webkit-user-select: auto;
}

.regexOption + label {
    cursor: pointer;
    color: grey;
}

.regexOption:checked + label.g {
    color: #00ffcc;
    background: #00ffcc;
}

.regexOption:checked + label.i {
    color: #66ff66;
    background: #66ff66
}

.regexOption:checked + label.m {
    color: #ccff00;
    background: #ccff00
}

code {
    display: inline-block;
}

.flex-container {
    width: 100%;
    display: inline-flex;
    align-items: center;
}

.flex-containee-small {
}

.flex-containee-large {
    flex: 2;
    width: 100%
}

.left-margin {
    margin-left: 0.5em;
}

.regexInput {
    display: inline;
}

/* make this a class so naming is clear */
div.regexInput {
    font-size: 16px;
    font-family: "DejaVu Sans Mono Bold";
}

#treeView {
    -webkit-user-select: initial;
    cursor: text;               /* doesnt...work?*/
}

ol {
    background: rgba(50, 120, 10, .2);
    counter-reset: depth;
    list-style-type: none;
}

li:before {
  counter-increment: depth;
  content: counters(depth, ".") ". ";
}

li input + ol > li {
    display: none;
    margin-left: -14px !important;
    padding-left: 1px;
}

li input:checked + ol > li {
    display: block;
    margin: 0 0 0.125em;
}

li > input {
    position: absolute;
    display: inline-block;
    float: left;
    left: -2em;
    z-index: 2;
    cursor: pointer;
    height: 1em;
    width: 1em;
    top: 0;
}

li {
    position: relative;
}

ul {
    list-style: none;
}